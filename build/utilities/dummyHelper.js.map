{"version":3,"sources":["../../server/utilities/dummyHelper.js"],"names":["helperClass","password","hash","bcrypt","hashSync","hashedpassword","compareSync","email","type","jwt","sign","expiresIn"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;AAEA;;;;IAKMA,W;;;;;;;;;;AACJ;;;;;;;iCAQoBC,Q,EAAU;AAC5B,UAAMC,IAAI,GAAGC,mBAAOC,QAAP,CAAgBH,QAAhB,EAA0B,EAA1B,CAAb;;AAEA,aAAOC,IAAP;AACD;AAGD;;;;;;;;;;4BAOeD,Q,EAAUI,c,EAAgB;AACvC,aAAOF,mBAAOG,WAAP,CAAmBL,QAAnB,EAA6BI,cAA7B,CAAP,CADuC,CACc;AACtD;AAED;;;;;;;;;;;wCAYG;AAAA,UAFDE,KAEC,QAFDA,KAEC;AAAA,UADDC,IACC,QADDA,IACC;AACD,aAAOC,yBAAIC,IAAJ,CAAS;AACdH,QAAAA,KAAK,EAALA,KADc;AAEdC,QAAAA,IAAI,EAAJA;AAFc,OAAT,EAGJ,YAHI,EAGU;AACfG,QAAAA,SAAS,EAAE;AADI,OAHV,CAAP;AAMD;;;;;;eAGYX,W","sourcesContent":["import bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\n\n/**\n * @exports\n * @class helperClass\n */\n\nclass helperClass {\n  /**\n   * Userhelper Class\n   * @staticmethod hashpassword\n   * @param  {array} dataStore\n   * @param {string} password\n   * @return {string} hashedpassword\n   */\n\n  static hashPassword(password) {\n    const hash = bcrypt.hashSync(password, 10);\n\n    return hash;\n  }\n\n\n  /**\n   * Userhelper Class\n   * @staticmethod compare\n   * @param  {array} dataStore\n   * @param {string} passwordcompare\n   * @return {string} comparedpassword\n   */\n  static compare(password, hashedpassword) {\n    return bcrypt.compareSync(password, hashedpassword); // true\n  }\n\n  /**\n   * Userhelper Class\n   * @staticmethod generateToken\n   * @param  {array} dataStore\n   * @param {string} email\n   * @param {string} type\n   * @return {string}\n   */\n\n  static  generateToken({\n    email,\n    type,\n  }) {\n    return jwt.sign({\n      email,\n      type,\n    }, 'privatekey', {\n      expiresIn: '2h',\n    });\n  }\n}\n\nexport default helperClass;"],"file":"dummyHelper.js"}