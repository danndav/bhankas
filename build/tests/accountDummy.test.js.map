{"version":3,"sources":["../../server/tests/accountDummy.test.js"],"names":["chai","use","chaiHttp","should","describe","it","done","request","server","get","end","err","res","body","have","property","to","equals","be","an","post","send","email","firstName","lastName","type","balance","status","accounNumber","patch"],"mappings":"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","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport server from '../app';\n\nchai.use(chaiHttp);\nchai.should();\n\ndescribe('UNIT TESTS FOR DUMMY USER Accounts', () => {\n  /*\n     * Test the /GET route\n     */\n  describe('/GET REQUEST', () => {\n    it('it should GET all accounts', (done) => {\n      chai\n        .request(server)\n        .get('/api/v1/getAccounts/')\n        .end((err, res) => {\n          res.body.should.have\n            .property('message')\n            .to.equals('Successfully fetched all accounts');\n          res.should.have.property('status').to.equals(200);\n          res.body.should.have.property('data').to.be.an('array');\n          done();\n        });\n    });\n  });\n  describe('/POST REQUEST', () => {\n    it('it should create Bank account ', (done) => {\n      chai\n        .request(server)\n        .post('/api/v1/createAccounts')\n        .send({\n          email: 'lekan@gmail.com',\n          firstName: 'layo',\n          lastName: 'dayo',\n          type: 'current',\n          balance: 123,\n        })\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.have.property('status').to.equals(201);\n          res.body.should.have.property('data').to.be.an('object');\n          res.body.should.have\n            .property('message')\n            .to.equals('Account created successfully');\n\n          done();\n        });\n    });\n  });\n\n  describe('/PATCH REQUEST', () => {\n    it('it should patch account ', (done) => {\n      const accounNumber = 123456789;\n      chai\n        .request(server)\n        .patch(`/api/v1/getAccounts/${accounNumber}`)\n        .send({\n          status: 'inactive',\n        })\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.have.property('status').to.equals(201);\n          res.body.should.have.property('data').to.be.an('object');\n          res.body.should.have\n            .property('message')\n            .to.equals('account status changed  successfull');\n\n          done();\n        });\n    });\n\n    it('it should not patch unregistered account ', (done) => {\n      const accounNumber = 1098766549;\n      chai\n        .request(server)\n        .patch(`/api/v1/getAccounts/${accounNumber}`)\n        .send({\n          status: 'inactive',\n        })\n        .end((err, res) => {\n          res.should.have.status(404);\n\n          done();\n        });\n    });\n  });\n\n  describe('/DELETE REQUEST', () => {\n    it('it should delete account ', (done) => {\n      const accounNumber = 123456789;\n      chai\n        .request(server)\n        .delete(`/api/v1/deleteAccount/${accounNumber}`)\n        .end((err, res) => {\n          res.should.have.status(201);\n          res.body.should.have.property('status').to.equals(201);\n          res.body.should.have\n            .property('message')\n            .to.equals('Account Succesfully deleted');\n\n          done();\n        });\n    });\n\n    it('it should not delete unfound  account ', (done) => {\n      const accounNumber = 1098766549;\n      chai\n        .request(server)\n        .delete(`/api/v1/deleteAccount/${accounNumber}`)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.have\n            .property('message')\n            .to.equals('This account  does not exist');\n          done();\n        });\n    });\n  });\n});\n"],"file":"accountDummy.test.js"}